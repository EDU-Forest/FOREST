import type { NextConfigComplete } from '../../../../server/config-shared';
import type { DocumentType } from '../../../../shared/lib/utils';
import type { BuildManifest } from '../../../../server/get-page-files';
import type { ReactLoadableManifest } from '../../../../server/load-components';
import type { ClientReferenceManifest } from '../../plugins/flight-manifest-plugin';
import type { NextFontManifestPlugin } from '../../plugins/next-font-manifest-plugin';
export declare function getRender({ dev, page, appMod, pageMod, errorMod, error500Mod, pagesType, Document, buildManifest, reactLoadableManifest, appRenderToHTML, pagesRenderToHTML, clientReferenceManifest, subresourceIntegrityManifest, serverCSSManifest, serverActionsManifest, config, buildId, nextFontManifest, incrementalCacheHandler, }: {
    pagesType: 'app' | 'pages' | 'root';
    dev: boolean;
    page: string;
    appMod: any;
    pageMod: any;
    errorMod: any;
    error500Mod: any;
    appRenderToHTML: any;
    pagesRenderToHTML: any;
    Document: DocumentType;
    buildManifest: BuildManifest;
    reactLoadableManifest: ReactLoadableManifest;
    subresourceIntegrityManifest?: Record<string, string>;
    clientReferenceManifest?: ClientReferenceManifest;
    serverCSSManifest: any;
    serverActionsManifest: any;
    appServerMod: any;
    config: NextConfigComplete;
    buildId: string;
    nextFontManifest: NextFontManifestPlugin;
    incrementalCacheHandler?: any;
}): (request: Request) => Promise<Response>;
